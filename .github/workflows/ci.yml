name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: "24"
  PYTHON_VERSION: "3.13"

jobs:
  client:
    name: Client Tests & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Type check
        run: |
          cd client
          npm run type-check

      - name: Lint
        run: |
          cd client
          npm run lint

      - name: Run tests
        run: |
          cd client
          npm test

      - name: Build for production
        run: |
          cd client
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist/
          retention-days: 7

  api:
    name: API Tests & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: api/requirements-dev.txt

      - name: Install dependencies
        run: |
          cd api
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint with Ruff
        run: |
          cd api
          ruff check .

      - name: Format check with Ruff
        run: |
          cd api
          ruff format --check .

      - name: Type check with mypy
        run: |
          cd api
          mypy .

      - name: Test with pytest
        run: |
          cd api
          pytest --verbose

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-coverage
          path: |
            api/htmlcov/
            api/coverage.xml
          retention-days: 7

  docker:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [client, api]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build client Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: false
          tags: monorepo-client:test

      - name: Build API Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: false
          tags: monorepo-api:test

  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [client, api]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: api/requirements-dev.txt

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Install API dependencies
        run: |
          cd api
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Start API server
        run: |
          cd api
          cp env.example .env
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Build client
        run: |
          cd client
          npm run build

      - name: Test API health
        run: |
          curl -f http://localhost:8000/health || exit 1
          curl -f http://localhost:8000/api/health || exit 1
